version: '3.4'


services:
   #nginx-proxy:
   #  image: nginxproxy/nginx-proxy
   #  ports:
   #    - 80:80
   #    - 443:443
   #  privileged: true
   #  environment:
   #    - ENABLE_IPV6=true
   #  volumes:
   #    - ~/nginx/vhost.d:/etc/nginx/vhost.d
   #    - ~/nginx-certs:/etc/nginx/certs:ro
   #    - ~/nginx-conf:/etc/nginx/conf.d
   #    - ~/nginx-logs:/var/log/nginx
   #    - /usr/share/nginx/html
   #    - /var/run/docker.sock:/tmp/docker.sock:ro

   productapi:
     container_name: product
     image: ${DOCKER_REGISTRY-}product
     build:
       context: .
       dockerfile: ProductService/Dockerfile
     ports:
       - 5001:80
       - 5010:443
     environment:
       - ASPNETCORE_URLS=https://+;http://+
       - PUBLIC_URL=https://localhost:5001
       - ASPNETCORE_HTTPS_PORT=5010
     networks:
       - backend-demo
   
   userapi:
     container_name: user
     image: ${DOCKER_REGISTRY-}user
     build:
       context: .
       dockerfile: UserService/Dockerfile
     ports:
       - 5002:80
     networks:
       - backend-demo   

   #yarp:
   # container_name: yarp
   # image: ${DOCKER_REGISTRY-}yarp
   # build:
   #   context: .
   #   dockerfile: ApiGateway/Dockerfile
   # ports:
   #   - 5000:80
   # networks:
   #   - backend

#volumes:
#  pgvol:
#  #pgadmin:
#  upload_data:
networks:
  backend-demo:
    driver: bridge
    external: true